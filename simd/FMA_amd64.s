//+build !noasm !appengine
// AUTO-GENERATED BY C2GOASM -- DO NOT EDIT

TEXT Â·_MultiplyBytes(SB), $328-24

    MOVQ vec1+0(FP), DI
    MOVQ vec2+8(FP), SI
    ADDQ $8, SP

                                 // vmovdqa	oword [rsp + 48], xmm0
                                 // vmovdqa	oword [rsp + 32], xmm1
                                 // vmovdqa	xmm1, oword [rsp + 48]
                                 // vmovdqa	xmm0, oword [rsp + 32]
                                 // vmovdqa	oword [rsp + 112], xmm1
                                 // vmovdqa	oword [rsp + 96], xmm0
                                 // vmovdqa	xmm0, oword [rsp + 112]
                                 // vmovdqa	xmm1, oword [rsp + 96]
                                 // vpmullw	xmm0, xmm0, xmm1
                                 // vmovdqa	oword [rsp + 16], xmm0
                                 // vmovdqa	xmm0, oword [rsp + 48]
                                 // vmovdqa	oword [rsp + 208], xmm0
                                 // mov	dword [rsp + 204], 8
                                 // vmovdqa	xmm0, oword [rsp + 208]
                                 // mov	eax, dword [rsp + 204]
                                 // vmovd	xmm1, eax
                                 // vpsrlw	xmm1, xmm0, xmm1
                                 // vmovdqa	xmm0, oword [rsp + 32]
                                 // vmovdqa	oword [rsp + 176], xmm0
                                 // mov	dword [rsp + 172], 8
                                 // vmovdqa	xmm0, oword [rsp + 176]
                                 // mov	eax, dword [rsp + 172]
                                 // vmovd	xmm2, eax
                                 // vpsrlw	xmm0, xmm0, xmm2
                                 // vmovdqa	oword [rsp + 80], xmm1
                                 // vmovdqa	oword [rsp + 64], xmm0
                                 // vmovdqa	xmm0, oword [rsp + 80]
                                 // vmovdqa	xmm1, oword [rsp + 64]
                                 // vpmullw	xmm0, xmm0, xmm1
                                 // vmovdqa	oword [rsp], xmm0
                                 // vmovdqa	xmm0, oword [rsp]
                                 // vmovdqa	oword [rsp + 304], xmm0
                                 // mov	dword [rsp + 300], 8
                                 // vmovdqa	xmm0, oword [rsp + 304]
                                 // mov	eax, dword [rsp + 300]
                                 // vmovd	xmm1, eax
                                 // vpsllw	xmm1, xmm0, xmm1
                                 // vmovdqa	xmm0, oword [rsp + 16]
                                 // vmovdqa	oword [rsp + 272], xmm0
                                 // mov	dword [rsp + 268], 8
                                 // vmovdqa	xmm0, oword [rsp + 272]
                                 // mov	eax, dword [rsp + 268]
                                 // vmovd	xmm2, eax
                                 // vpsllw	xmm0, xmm0, xmm2
                                 // vmovdqa	oword [rsp + 144], xmm0
                                 // mov	dword [rsp + 140], 8
                                 // vmovdqa	xmm0, oword [rsp + 144]
                                 // mov	eax, dword [rsp + 140]
                                 // vmovd	xmm2, eax
                                 // vpsrlw	xmm0, xmm0, xmm2
                                 // vmovdqa	oword [rsp + 240], xmm1
                                 // vmovdqa	oword [rsp + 224], xmm0
                                 // vmovdqa	xmm0, oword [rsp + 240]
                                 // vpor	xmm0, xmm0, oword [rsp + 224]
    SUBQ $8, SP
    MOVQ AX, ret+16(FP)
    RET
